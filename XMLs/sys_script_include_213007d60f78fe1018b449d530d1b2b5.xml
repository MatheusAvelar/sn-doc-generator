<?xml version="1.0" encoding="UTF-8"?>
<unload unload_date="2025-10-27 13:44:24">
<sys_script_include action="INSERT_OR_UPDATE">
<access>public</access>
<active>true</active>
<api_name>global.GetUpdateSetDocumentation</api_name>
<caller_access/>
<client_callable>true</client_callable>
<description/>
<mobile_callable>false</mobile_callable>
<name>GetUpdateSetDocumentation</name>
<sandbox_callable>false</sandbox_callable>
<script><![CDATA[var GetUpdateSetDocumentation = Class.create();
GetUpdateSetDocumentation.prototype = Object.extendsObject(AbstractAjaxProcessor, {
    getDocumentation: function() {
        var updateSetName = this.getParameter('sysparm_update_set');
        var audience = this.getParameter('sysparm_audience') || 'po';
        var userName = gs.getUserDisplayName();
        var gdt = new GlideDateTime();
        var today = gdt.getLocalDate().getByFormat('dd/MM/yyyy');

        // ===== P√°gina Inicial =====
        var homeHtml = "";
        homeHtml += "<div style='text-align:center;margin-bottom:25px;padding:25px;background:#f1f8e9;border:1px solid #c5e1a5;border-radius:8px;'>";
        homeHtml += "  <img src='https://dev278204.service-now.com/6be4c85cc330b2107859b11ed4013140.iix' alt='Logo' style='width:300px;height:auto;margin-bottom:10px;' />";

        // T√≠tulo din√¢mico baseado no input de Cen√°rio
        homeHtml += "  <h1 id='tituloPrincipal' style='margin:0;font-size:24px;'>Documenta√ß√£o - ServiceNow</h1>";
        homeHtml += "  <p style='font-size:14px;opacity:0.9;margin-top:6px;'>Gerador autom√°tico de evid√™ncias de testes e artefatos</p>";
        homeHtml += "</div>";

        if (!updateSetName)
            return homeHtml + "<p style='color:red;text-align:center;'>Nenhum Update Set informado.</p>";

        // ===== Cabe√ßalho =====
        var headerHtml = "<div style='background:#f9f9f9;border:1px solid #ddd;border-radius:8px;padding:15px 20px;margin-bottom:20px;'>";
        headerHtml += "<div style='display:flex;justify-content:space-between;flex-wrap:wrap;align-items:center;'>";
        headerHtml += "<h3 style='margin:0;color:#333;'>]]>üßæ<![CDATA[ Evid√™ncia de Testes</h3>";
        headerHtml += "<span style='color:#777;font-size:13px;'>Gerado em <b>" + today + "</b></span></div>";
        headerHtml += "<hr style='margin:10px 0;border:none;border-top:1px solid #eee;' />";

        // Inputs e placeholders
        headerHtml += "<table style='width:100%;border-collapse:collapse;font-size:14px;'>";
        headerHtml += "<tr><td style='padding:4px;'><b>Projeto:</b> <input type='text' placeholder='Ex: Portal de Chamados' style='width:90%;border:none;border-bottom:1px solid #ccc;padding:2px;' /></td>";
        headerHtml += "<td style='padding:4px;'><b>Data:</b> " + today + "</td></tr>";
        headerHtml += "<tr><td style='padding:4px;'><b>Executado Por:</b> " + userName + "</td>";
        headerHtml += "<td style='padding:4px;'><b>Squad:</b> <input type='text' placeholder='Nome da Squad' style='width:90%;border:none;border-bottom:1px solid #ccc;padding:2px;' /></td></tr>";
        headerHtml += "<tr><td style='padding:4px;'><b>Ambiente de Testes:</b> <input type='text' placeholder='Ex: DEV / TEST' style='width:90%;border:none;border-bottom:1px solid #ccc;padding:2px;' /></td>";
        headerHtml += "<td style='padding:4px;'><b>Status:</b> <span style='color:#4CAF50;font-weight:bold;'>Pronto</span></td></tr>";

        // Input de Cen√°rio
        headerHtml += "<tr><td style='padding:4px;'><b>Cen√°rio:</b> <input id='inputCenario' type='text' placeholder='Descreva o cen√°rio testado' style='width:90%;border:none;border-bottom:1px solid #ccc;padding:2px;' oninput=\"(function(el){var t=document.getElementById('tituloPrincipal');var v=el.value.trim(); t.textContent = v ? 'Documenta√ß√£o - ' + v : 'Documenta√ß√£o - ServiceNow';})(this)\" onblur=\"(function(el){var t=document.getElementById('tituloPrincipal');var v=el.value.trim(); t.textContent = v ? 'Documenta√ß√£o - ' + v : 'Documenta√ß√£o - ServiceNow';})(this)\" /></td>";
        headerHtml += "<td style='padding:4px;'><b>Sistema:</b> ServiceNow</td></tr>";
        headerHtml += "<tr><td style='padding:4px;'><b>Story:</b> <input type='text' placeholder='N√∫mero da story (ex: Story-1234)' style='width:90%;border:none;border-bottom:1px solid #ccc;padding:2px;' /></td>";
        headerHtml += "<td style='padding:4px;'><b>Update Set:</b> " + updateSetName + "</td></tr>";
        headerHtml += "</table>";

        headerHtml += "<div style='margin-top:10px;'><b>Observa√ß√µes:</b>";
        headerHtml += "<textarea placeholder='Adicione observa√ß√µes relevantes...' style='width:100%;margin-top:5px;height:50px;border:1px solid #ccc;border-radius:6px;padding:6px;font-size:13px;resize:none;'></textarea></div></div>";

        // ===== Agrupa itens por tipo =====
        var allowedTypesForPO = ["Script Include", "Business Rule", "UI Page", "Table", "Field Label"];
        var updatesByType = {};
        var gr = new GlideRecord('sys_update_xml');
        gr.addQuery('update_set.name', updateSetName);
        gr.orderBy('type');
        gr.query();
        while (gr.next()) {
            var type = gr.type.toString();
            if (audience == "po" && allowedTypesForPO.indexOf(type) == -1) continue;
            if (!updatesByType[type]) updatesByType[type] = [];
            updatesByType[type].push(gr.getUniqueValue());
        }

        // ===== Sum√°rio e evid√™ncias =====
        var summaryHtml = "<div style='background:#f1f8e9;border:1px solid #c5e1a5;border-radius:8px;padding:15px 20px;margin-bottom:25px;'>";
        summaryHtml += "<h3 style='margin-top:0;color:#33691e;'>]]>üìö<![CDATA[ Sum√°rio dos Artefatos</h3><ul style='list-style:none;padding-left:10px;margin:0;'>";
        for (var type in updatesByType) {
            var displayType = (audience == "po") ? this.getTranslatedTypeName(type) : type;
            var anchor = type.toLowerCase().replace(/\s+/g, "_");
            summaryHtml += "<li style='margin:4px 0;'><a href='#" + anchor + "' style='color:#00796b;text-decoration:none;font-weight:bold;'>]]>üîπ<![CDATA[ " + displayType + "</a></li>";
        }
        summaryHtml += "</ul></div>";

        var evidenciasHtml = "<div id='blocoEvidencias' style='background:#fff8e1;border:1px solid #ffe082;border-radius:8px;padding:15px 20px;margin-bottom:25px;'>";
        evidenciasHtml += "<style>#blocoEvidencias img { max-width:100%; height:auto; display:block; margin:auto; margin-bottom:10px; }</style>";
        evidenciasHtml += "<h3 style='margin-top:0;color:#ff6f00;'>]]>üñº<![CDATA[Ô∏è Evid√™ncias (Imagens)</h3>";
        evidenciasHtml += "<p style='font-size:13px;color:#555;margin-bottom:10px;'>Aqui voc√™ poder√° adicionar imagens ou evid√™ncias relacionadas ao Update Set.</p>";
        evidenciasHtml += "</div>";

        // ===== Bloco detalhado (sem altera√ß√£o) =====
        var blocoHtml = "";
        for (var type in updatesByType) {
            var icon = this.getIconByType(type);
            var displayType = (audience == "po") ? this.getTranslatedTypeName(type) : type;
            var anchor = type.toLowerCase().replace(/\s+/g, "_");

            blocoHtml += "<div id='" + anchor + "' style='background:#f9f9f9;border:1px solid #ddd;border-radius:8px;padding:12px 16px;margin-bottom:20px;'>";
            blocoHtml += "<h3 style='margin:0 0 8px 0;color:#333;'>" + icon + " " + displayType + "</h3><ul style='list-style:none;padding-left:0;margin:0;'>";

            for (var i = 0; i < updatesByType[type].length; i++) {
                var grItem = new GlideRecord('sys_update_xml');
                if (grItem.get(updatesByType[type][i])) {
                    var friendlyName = this.getFriendlyName(type, grItem);
                    var description = this.getDescriptionByType(type, grItem) || (type === "Field Label" ? "Campo do formul√°rio" : "Sem coment√°rio");
                    var action = grItem.action.toString().toUpperCase();
                    var link = this.getRecordLink(grItem);

                    var actionLabel, actionColor;
                    switch (action) {
                        case 'DELETE':
                            actionLabel = 'Exclus√£o';
                            actionColor = '#F44336';
                            break;
                        case 'INSERT_OR_UPDATE':
                            actionLabel = 'Cria√ß√£o/Atualiza√ß√£o';
                            actionColor = '#FF9800';
                            break;
                        default:
                            actionLabel = 'Outro';
                            actionColor = '#9E9E9E';
                    }

                    blocoHtml += "<li style='padding:8px 10px;margin-bottom:8px;border-radius:6px;background:#fff;box-shadow:0 1px 3px rgba(0,0,0,0.05);transition:0.2s;'>";
                    blocoHtml += "<div style='display:flex;justify-content:space-between;align-items:center;'><b style='color:#333;'>" + friendlyName + "</b>";
                    blocoHtml += "<span style='background:" + actionColor + ";color:white;padding:2px 8px;border-radius:12px;font-size:11px;'>" + actionLabel + "</span></div>";
                    blocoHtml += "<div style='color:#555;font-size:12px;margin-top:4px;'>" + description + "</div>";
                    blocoHtml += "<div style='margin-top:6px;'><a href='" + link + "' target='_blank' style='color:#2196F3;font-size:12px;text-decoration:none;'>]]>üîó<![CDATA[ Abrir artefato no ServiceNow</a></div>";
                    blocoHtml += "</li>";
                }
            }

            blocoHtml += "</ul><div style='text-align:right;margin-top:8px;'><a href='#top' style='font-size:12px;color:#00796b;text-decoration:none;'>‚¨ÜÔ∏è Voltar ao topo</a></div></div>";
        }

        // ===== Script para atualizar t√≠tulo dinamicamente =====
        var scriptHtml = "<script>document.addEventListener('DOMContentLoaded', function(){";
        scriptHtml += "var titulo=document.getElementById('tituloPrincipal');";
        scriptHtml += "var inputCenario=document.getElementById('inputCenario');";
        scriptHtml += "if(inputCenario && titulo){";
        scriptHtml += "inputCenario.addEventListener('input',function(){";
        scriptHtml += "var val=inputCenario.value.trim();";
        scriptHtml += "titulo.textContent = val ? 'Documenta√ß√£o - ' + val : '';";
        scriptHtml += "});}});</script>";

        // ===== Retorno Final =====
        return "<div id='top'>" + homeHtml + headerHtml + summaryHtml + evidenciasHtml + blocoHtml + scriptHtml + "</div>";
    },


    getDescriptionByType: function(type, grItem) {
        var description = "";
        var name = grItem.getValue('name');
        var sysIdMatch = name.match(/sys_[a-z_]+_([0-9a-f]{32})/);
        var sysId = sysIdMatch ? sysIdMatch[1] : null;

        switch (type) {
            case 'Script Include':
                if (sysId) {
                    var siGR = new GlideRecord('sys_script_include');
                    if (siGR.get(sysId)) description = siGR.getValue('description');
                }
                break;
            case 'Business Rule':
                if (sysId) {
                    var brGR = new GlideRecord('sys_script');
                    if (brGR.get(sysId)) description = brGR.getValue('description');
                }
                break;
            case 'UI Page':
                if (sysId) {
                    var uiGR = new GlideRecord('sys_ui_page');
                    if (uiGR.get(sysId)) description = uiGR.getValue('description');
                }
                break;
            case 'Table':
                if (sysId) {
                    var tblGR = new GlideRecord('sys_db_object');
                    if (tblGR.get(sysId)) description = tblGR.getValue('description');
                }
                break;
            case 'Field Label':
                description = "Campo do formul√°rio";
                break;
            default:
                description = "";
        }
        return description;
    },

    getFriendlyName: function(type, gr) {
        var name = gr.name.toString();
        var sysIdMatch = name.match(/sys_[a-z_]+_([0-9a-f]{32})/);
        var sysId = sysIdMatch ? sysIdMatch[1] : null;

        switch (type) {
            case 'Script Include':
                if (sysId) {
                    var siGR = new GlideRecord('sys_script_include');
                    if (siGR.get(sysId)) return siGR.getDisplayValue() + " (" + siGR.name + ")";
                }
                return name;
            case 'Business Rule':
                if (sysId) {
                    var brGR = new GlideRecord('sys_script');
                    if (brGR.get(sysId)) return brGR.getDisplayValue() + " (" + brGR.name + ")";
                }
                return name;
            case 'Table':
                if (sysId) {
                    var tblGR = new GlideRecord('sys_db_object');
                    if (tblGR.get(sysId)) return tblGR.getDisplayValue() + " (" + tblGR.name + ")";
                }
                return name;
            case 'UI Page':
                if (sysId) {
                    var uiGR = new GlideRecord('sys_ui_page');
                    if (uiGR.get(sysId)) return uiGR.getDisplayValue() + " (" + uiGR.name + ")";
                }
                var uGR = new GlideRecord('sys_ui_page');
                uGR.addQuery('name', name);
                uGR.query();
                if (uGR.next()) return uGR.title + " (" + name + ")";
                return name;
            case 'Field Label':
                return this.getFriendlyFieldLabel(name);
            default:
                return name;
        }
    },

    getFriendlyFieldLabel: function(updateXmlName) {
        var nameWithoutPrefix = updateXmlName.replace(/^sys_documentation_/, '');
        var lastUIndex = nameWithoutPrefix.lastIndexOf('_u_');
        var columnName = lastUIndex !== -1 ? nameWithoutPrefix.substring(lastUIndex + 1) : nameWithoutPrefix;
        columnName = columnName.replace(/_en$/, '');
        var fGR = new GlideRecord('sys_dictionary');
        fGR.addQuery('element', columnName);
        fGR.query();
        if (fGR.next()) return fGR.column_label + " (" + columnName + ")";
        return columnName;
    },

    getIconByType: function(type) {
        switch (type) {
            // ==== Back-end ====
            case 'Script Include':
                return ']]>üß†<![CDATA[';
            case 'Business Rule':
                return '‚öôÔ∏è';
            case 'Scheduled Script Execution': // Scheduled Job
            case 'Scheduled Script':
                return '‚è∞';
            case 'Fix Script':
                return ']]>ü©π<![CDATA[';
            case 'Flow':
                return ']]>üåä<![CDATA[';
            case 'Subflow':
                return ']]>üåä<![CDATA[';
            case 'Action':
                return ']]>üéØ<![CDATA[';
            case 'Flow Action':
                return ']]>üîÅ<![CDATA[';
            case 'Script Action':
                return ']]>üìú<![CDATA[';
            case 'Scripted REST Resource':
                return ']]>üîå<![CDATA[';
            case 'Scripted REST API':
                return ']]>üåê<![CDATA[';
            case 'REST Message':
                return ']]>üì°<![CDATA[';
            case 'SOAP Message':
                return ']]>üß¥<![CDATA[';
            case 'Transform Map':
                return ']]>üîÑ<![CDATA[';
            case 'Import Set Table':
                return ']]>üì•<![CDATA[';
            case 'Import Set Transform Map':
                return '‚ôªÔ∏è';
            case 'Data Source':
                return ']]>üóÇ<![CDATA[Ô∏è';
            case 'Record Producer':
                return ']]>üßæ<![CDATA[';
            case 'Catalog Script':
                return ']]>üí¨<![CDATA[';
            case 'Script Include Test':
                return ']]>üß™<![CDATA[';
            case 'Access Control':
                return ']]>üîí<![CDATA[';
            case 'ACL':
                return ']]>üîê<![CDATA[';
            case 'Event Registry':
                return ']]>üì£<![CDATA[';
            case 'Notification Email Script':
                return ']]>üìß<![CDATA[';
            case 'Notification':
                return ']]>üì®<![CDATA[';
            case 'UI Script':
                return ']]>ü™∂<![CDATA[';
            case 'UI Macro':
                return ']]>üß©<![CDATA[';
            case 'UI Formatter':
                return ']]>ü™Ñ<![CDATA[';
            case 'Processor':
                return '‚öôÔ∏è';

                // ==== Front-end / UI ====
            case 'UI Page':
                return ']]>üåç<![CDATA[';
            case 'UI Action':
                return ']]>üé¨<![CDATA[';
            case 'UI Policy':
                return ']]>üß≠<![CDATA[';
            case 'Client Script':
                return ']]>üíª<![CDATA[';
            case 'Form Design':
                return ']]>üß±<![CDATA[';
            case 'Form Layout':
                return ']]>üß©<![CDATA[';
            case 'Field Label':
                return ']]>üè∑<![CDATA[Ô∏è';
            case 'Catalog Client Script':
                return ']]>üñ±<![CDATA[Ô∏è';
            case 'Catalog UI Policy':
                return ']]>üé®<![CDATA[';
            case 'Widget':
                return ']]>üß±<![CDATA[';
            case 'Service Portal':
                return ']]>üö™<![CDATA[';
            case 'Theme':
                return ']]>üé®<![CDATA[';
            case 'Menu':
                return ']]>üìú<![CDATA[';
            case 'Module':
                return ']]>üìÅ<![CDATA[';
            case 'Application Menu':
                return ']]>üß≠<![CDATA[';
            case 'Navigation Menu':
                return ']]>üó∫<![CDATA[Ô∏è';
            case 'Page Route':
                return ']]>üõ§<![CDATA[Ô∏è';
            case 'Dashboard':
                return ']]>üìä<![CDATA[';
            case 'Report':
                return ']]>üìà<![CDATA[';
            case 'Visualization':
                return ']]>üìâ<![CDATA[';
            case 'UI Builder Page':
                return ']]>üèó<![CDATA[Ô∏è';

                // ==== Dados / Estrutura ====
            case 'Table':
                return ']]>üóÉ<![CDATA[Ô∏è';
            case 'Dictionary Entry':
                return ']]>üìö<![CDATA[';
            case 'Dictionary Override':
                return ']]>üìò<![CDATA[';
            case 'Field':
                return ']]>üßæ<![CDATA[';
            case 'Choice List':
                return ']]>üî¢<![CDATA[';
            case 'Reference Qualifier':
                return ']]>üîó<![CDATA[';
            case 'List Layout':
                return ']]>üßÆ<![CDATA[';
            case 'Form Section':
                return ']]>üìã<![CDATA[';
            case 'View':
                return ']]>üëÅ<![CDATA[Ô∏è';
            case 'Relationship':
                return ']]>ü™¢<![CDATA[';
            case 'CI Relationship':
                return ']]>üî©<![CDATA[';
            case 'CI Class':
                return ']]>üè≠<![CDATA[';

                // ==== Cat√°logo / Portal ====
            case 'Catalog Item':
                return ']]>üõí<![CDATA[';
            case 'Record Producer':
                return ']]>üßæ<![CDATA[';
            case 'Order Guide':
                return ']]>üì¶<![CDATA[';
            case 'Flow Designer Action':
                return '‚ö°';
            case 'Flow Designer Subflow':
                return ']]>üîÑ<![CDATA[';

                // ==== Workflows e Automa√ß√£o ====
            case 'Workflow':
                return ']]>üîÅ<![CDATA[';
            case 'Workflow Activity':
                return '‚öôÔ∏è';
            case 'Approval Definition':
                return '‚úÖ';
            case 'Approval Rule':
                return '‚òëÔ∏è';
            case 'Assignment Rule':
                return ']]>üìå<![CDATA[';
            case 'Notification Trigger':
                return ']]>üîî<![CDATA[';

                // ==== Seguran√ßa e Configura√ß√£o ====
            case 'Role':
                return ']]>üß©<![CDATA[';
            case 'Group':
                return ']]>üë•<![CDATA[';
            case 'User':
                return ']]>üë§<![CDATA[';
            case 'Property':
                return '‚öôÔ∏è';
            case 'System Property':
                return ']]>üß≠<![CDATA[';
            case 'UI Property':
                return ']]>ü™ü<![CDATA[';
            case 'Access Role':
                return ']]>üîê<![CDATA[';
            case 'Security Rule':
                return ']]>üõ°<![CDATA[Ô∏è';
            case 'Domain':
                return ']]>üåê<![CDATA[';
            case 'Domain Separation':
                return ']]>üåç<![CDATA[';

                // ==== Integra√ß√µes ====
            case 'Connection & Credential Alias':
                return ']]>üîë<![CDATA[';
            case 'MID Server Script Include':
                return ']]>üõ∞<![CDATA[Ô∏è';
            case 'IntegrationHub':
                return ']]>üîó<![CDATA[';
            case 'Spoke':
                return ']]>üõ†<![CDATA[Ô∏è';
            case 'REST API Explorer':
                return ']]>üöÄ<![CDATA[';
            case 'Outbound REST Message':
                return ']]>üì§<![CDATA[';
            case 'Inbound REST Message':
                return ']]>üì•<![CDATA[';

                // ==== Outros ====
            case 'Update Set':
                return ']]>üì¶<![CDATA[';
            case 'Application File':
                return ']]>üóÇ<![CDATA[Ô∏è';
            case 'System Definition':
                return '‚öôÔ∏è';
            case 'Global UI Script':
                return ']]>üåê<![CDATA[';
            case 'Style Sheet':
                return ']]>üé®<![CDATA[';
            case 'Content Block':
                return ']]>üß±<![CDATA[';
            case 'Content Layout':
                return ']]>üñº<![CDATA[Ô∏è';
            case 'Content Theme':
                return ']]>ü™∂<![CDATA[';
            case 'Content Type':
                return ']]>üìë<![CDATA[';
            case 'Announcement':
                return ']]>üì¢<![CDATA[';
            case 'Knowledge Article':
                return ']]>üìò<![CDATA[';
            case 'SLA Definition':
                return '‚è±Ô∏è';
            case 'SLA Workflow':
                return ']]>üìè<![CDATA[';
            case 'Metric Definition':
                return ']]>üìä<![CDATA[';
            case 'Report Source':
                return ']]>üìÑ<![CDATA[';
            case 'Scripted REST API Resource':
                return ']]>üîå<![CDATA[';
            case 'Schedule':
                return ']]>üìÜ<![CDATA[';
            case 'Email Layout':
                return '‚úâÔ∏è';
            case 'Email Notification':
                return ']]>üì®<![CDATA[';
            case 'Email Template':
                return ']]>üìß<![CDATA[';

                // ==== Padr√£o ====
            default:
                return ']]>üìÑ<![CDATA[';
        }
    },

    getTranslatedTypeName: function(type) {
        var map = {
            "Script Include": "Script de Servidor",
            "Business Rule": "Regra de Neg√≥cio",
            "UI Page": "P√°gina de Interface",
            "UI Action": "Bot√£o ou A√ß√£o de Interface",
            "UI Policy": "Pol√≠tica de Interface",
            "Client Script": "Script de Cliente",
            "Table": "Tabela de Dados",
            "Field Label": "R√≥tulo de Campo",
            "Flow": "Fluxo de Automa√ß√£o",
            "Subflow": "Subfluxo",
            "Widget": "Componente de Portal",
            "Catalog Item": "Item de Cat√°logo",
            "Record Producer": "Produtor de Registro",
            "Notification": "Notifica√ß√£o",
            "Report": "Relat√≥rio",
            "Dashboard": "Painel",
            "Role": "Fun√ß√£o de Acesso",
            "Group": "Grupo de Usu√°rios",
            "Property": "Propriedade do Sistema",
            "Scripted REST API": "API REST Personalizada",
            "Transform Map": "Mapa de Transforma√ß√£o",
            "Import Set Table": "Tabela de Importa√ß√£o",
            "Access Control": "Controle de Acesso",
            "Workflow": "Fluxo de Trabalho",
            "Application Menu": "Menu de Aplica√ß√£o",
            "Module": "M√≥dulo de Navega√ß√£o",
            "UI Builder Page": "P√°gina do UI Builder",
            "Style Sheet": "Folha de Estilo (CSS)",
            "Notification Email Script": "Script de E-mail",
            "Fix Script": "Script de Corre√ß√£o",
            "REST Message": "Mensagem REST",
            "Event Registry": "Registro de Evento",
            "Dictionary Entry": "Entrada de Dicion√°rio",
            "Choice List": "Lista de Op√ß√µes",
            "Form Design": "Design de Formul√°rio",
            "Form Layout": "Layout de Formul√°rio"
        };

        return map[type] || type;
    },

    getRecordLink: function(gr) {
        var instanceUrl = gs.getProperty('doc.uri');
        var link = "";
        var nameMatch = gr.name.match(/^(.*)_([0-9a-f]{32})$/i);
        if (nameMatch) link = instanceUrl + nameMatch[1] + ".do?sys_id=" + nameMatch[2];

        return link;
    },

});]]></script>
<sys_class_name>sys_script_include</sys_class_name>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2025-10-27 13:34:39</sys_created_on>
<sys_id>213007d60f78fe1018b449d530d1b2b5</sys_id>
<sys_mod_count>1</sys_mod_count>
<sys_name>GetUpdateSetDocumentation</sys_name>
<sys_package display_value="Global" source="global">global</sys_package>
<sys_policy/>
<sys_scope display_value="Global">global</sys_scope>
<sys_update_name>sys_script_include_213007d60f78fe1018b449d530d1b2b5</sys_update_name>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2025-10-27 13:41:23</sys_updated_on>
</sys_script_include>
</unload>
